{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","value","onChange","target","GifGridItem","id","title","url","style","width","src","alt","href","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"kOAmCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAgBvC,OACI,0BAAMC,SATW,SAAAC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAKd,oDACA,2BACIO,UAAU,eACVC,KAAK,OACLC,MAAOV,EACPW,SAnBc,SAAAR,GACtBF,EAAcE,EAAES,OAAOF,YCYhBG,EAjBK,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAE9B,OACI,yBAAKR,UAAU,aACX,yBAAKA,UAAU,OAAOS,MAAO,CAACC,MAAO,UACjC,yBAAKV,UAAU,eAAeW,IAAKH,EAAKI,IAAI,mBACxC,yBAAKZ,UAAU,aACX,wBAAIA,UAAU,cAAeO,GAC7B,uBAAGP,UAAU,aAAb,wDAEA,uBAAGa,KAAK,IAAIb,UAAU,mBAAtB,oB,uBCZXc,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbR,EADa,yFAC2ES,UAAUF,GADrF,sBAEAG,MAAMV,GAFN,cAEbW,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAG,UAACgB,EAAIC,cAAL,aAAC,EAAYC,iBAAiBlB,QATtB,kBAYZc,GAZY,4CAAH,sDCiCLK,G,MA3BC,SAAC,GAAoB,IAAD,ECFR,SAAEZ,GAAe,IAAD,EAEdxB,mBAAS,CAC/B8B,KAAM,GACNO,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAU,WAENjB,EAAQC,GACHiB,MAAM,SAAAC,GAAI,OAAIH,EAAU,CACrBT,KAAMY,EACNL,SAAS,SAGlB,CAACb,IAEGc,EDb0BK,CAFD,EAAhBnB,UAEHU,EAFmB,EAEzBJ,KAAcO,EAFW,EAEXA,QAErB,OACI,oCACMA,GACE,yBAAK5B,UAAU,+BACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,SACf,yBAAKA,UAAU,WAKvByB,EAAOF,KAAK,SAAAC,GAAG,OACf,kBAAC,EAAD,eACIW,IAAKX,EAAIlB,IACJkB,UEOVY,EA3BM,WAAO,IAAD,EAES7C,mBAAS,CAAC,cAFnB,mBAEpB8C,EAFoB,KAER/C,EAFQ,KAKvB,OACI,yBAAKU,UAAU,kBACX,8CACA,kBAAC,EAAD,CACIV,cAAeA,IAEnB,6BAEA,yBAAKU,UAAU,OAEPqC,EAAWd,KAAK,SAAAR,GAAQ,OACxB,kBAAC,EAAD,CACIoB,IAAKpB,EACLA,SAAWA,UCjBnCuB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.bc2f52e5.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types'\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = e => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handelSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats =>  [inputValue, ...cats])\r\n            setInputValue('')\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handelSubmit}>\r\n            <label>Agregar Categoria</label>\r\n            <input\r\n                className='form-control'\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory","import React from \"react\"\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n\r\n    return (\r\n        <div className='col-3 m-2'>\r\n            <div className=\"card\" style={{width: '18rem'}}>\r\n                <img className=\"card-img-top\" src={url} alt=\"Card image cap\"/>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{ title }</h5>\r\n                        <p className=\"card-text\">Some quick example text to build\r\n                            the card's content.</p>\r\n                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem","export const getGifs = async (category) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?api_key=70QWjGqMcdhT7X6Ah4VH3xRZ70jrJGyW&q=${encodeURI(category)}&limit=10`\r\n    const resp = await fetch(url)\r\n    const { data } = await resp.json()\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs\r\n}","import React from \"react\"\r\nimport GifGridItem from \"./GifGridItem\"\r\nimport {useFetchGifs} from \"../hooks/useFetchGifs\"\r\nimport '../css/spinner.css'\r\n\r\n\r\nconst GifGrid = ( { category } ) => {\r\n\r\n    const{ data: images, loading } = useFetchGifs(category)\r\n\r\n    return (\r\n        <>\r\n            { loading && (\r\n                <div className='col-12 align-content-center'>\r\n                    <div className=\"spinner\">\r\n                        <div className=\"dot1\"></div>\r\n                        <div className=\"dot2\"></div>\r\n                    </div>\r\n                </div>\r\n            ) }\r\n            {\r\n                images.map( img =>\r\n                <GifGridItem\r\n                    key={img.id}\r\n                    { ...img }\r\n                />\r\n                )\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid","import { useState, useEffect } from 'react'\r\nimport {getGifs} from \"../helpers/getGifs\"\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then( imgs=>  setState( {\r\n                data: imgs,\r\n                loading: false\r\n            }) )\r\n\r\n    }, [category])\r\n\r\n    return state\r\n}","import React, {useState } from 'react';\r\nimport AddCategory from \"./components/AddCategory\"\r\nimport GifGrid from \"./components/GifGrid\"\r\n\r\nconst GifExpertApp = () => {\r\n\r\nconst [categories, setCategories] = useState(['one punch'])\r\n\r\n\r\n    return (\r\n        <div className='container my-5'>\r\n            <h2> GifExpertApp </h2>\r\n            <AddCategory\r\n                setCategories={setCategories}\r\n            />\r\n            <hr/>\r\n\r\n            <div className=\"row\">\r\n                {\r\n                    categories.map( category => (\r\n                    <GifGrid\r\n                        key={category}\r\n                        category={ category }/>\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}